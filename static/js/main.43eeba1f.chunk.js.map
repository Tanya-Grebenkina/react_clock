{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["timeString","date","toUTCString","slice","Clock","state","clockTime","Date","timerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","intervallId","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUMA,EAAa,SAACC,GAAD,OAAgBA,EAAKC,cAAcC,OAAO,IAAK,IAErDC,EAAb,4MACEC,MAAQ,CACNC,UAAW,IAAIC,MAFnB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZN,UAAW,IAAIC,OAGjB,IAAQD,EAAc,EAAKD,MAAnBC,UAGRO,QAAQC,KAAKd,EAAWM,MACvB,OAjBP,gCAoBE,SAAmBS,GACjB,IAAQC,EAAcP,KAAKQ,MAAnBD,UAEJA,IAAcD,EAAUC,WAE1BH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDA,MAzB9D,kCA6BE,WACEG,cAAcV,KAAKD,WA9BvB,oBAiCE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAV,EAAcG,KAAKJ,MAAnBC,UAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCJ,IAEhC,YAED,sBAAMI,UAAU,cAAhB,SACGpB,EAAWM,YA5CtB,GAA2Be,aCR3B,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAQ,CACNW,UAAW,UACXW,UAAU,GAHd,EAMEC,YAAc,EANhB,EAyBEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKnB,SAAS,CAAEe,UAAU,KA3B9B,EA8BEK,YAAc,WACZ,EAAKpB,SAAS,CAAEe,UAAU,KA/B9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAezB,KAAKoB,mBAC9CI,SAASC,iBAAiB,QAASzB,KAAKuB,aAExCvB,KAAKmB,YAAclB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CACZI,UAAWM,QAEZ,QAhBP,kCAmBE,WACEW,SAASE,oBAAoB,cAAe1B,KAAKoB,mBACjDI,SAASE,oBAAoB,QAAS1B,KAAKuB,aAC3Cb,cAAcV,KAAKmB,eAtBvB,oBAkCE,WACE,MAAgCnB,KAAKJ,MAA7BsB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAxCvC,GAAyBK,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.43eeba1f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  clockTime: Date;\n};\n\nconst timeString = (date: Date) => date.toUTCString().slice(-12, -4);\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    clockTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockTime: new Date(),\n      });\n\n      const { clockTime } = this.state;\n\n      // eslint-disable-next-line no-console\n      console.info(timeString(clockTime));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = this.props;\n\n    if (clockName !== prevProps.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { clockTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{clockName}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeString(clockTime)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4); // Иисус\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  intervallId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n\n    this.intervallId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n    clearInterval(this.intervallId);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}